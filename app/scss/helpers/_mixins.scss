// =============================================================================
// String Replace (вспомогательный миксин для font-face)
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

// $name - название для font-family
// $path - путь к шрифту без формата
// $weight - font-weight
// $style - font-style
// $exts - форматы шрифта, которые используются
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// =============================================================================
// Медиа запросы
// =============================================================================

// меньше указанной ширины
@mixin below($width) {
    @media screen and (max-width: $width) {
      @content;
    }
}

// больше указанной ширины
@mixin above($width) {
    @media screen and (min-width: $width) {
      @content;
    }
}

// между первой и второй шириной
@mixin between($minWidth, $maxWidth) {
    @media screen and (min-width: $minWidth) and (max-width: $maxWidth) {
      @content;
    }
}

// =============================================================================
// Позиционирование и вертикальное выравнивание
// =============================================================================

@mixin middle($type: 'transform') {
    position: absolute;

    @if $type == 'transform' {
        top: 50%;
        left: 50%;

        transform: translate(-50%, -50%);
    } @else if $type == 'margin' {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;

        margin: auto;
    }
}

// =============================================================================
// CLEARFIX
// =============================================================================

@mixin clearfix() {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}
